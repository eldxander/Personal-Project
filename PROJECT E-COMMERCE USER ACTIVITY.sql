-- DATA CLEANING--
SELECT*
FROM 
	ecommerce_clicks.data_staging
;

ALTER TABLE 
	ecommerce_clicks.data_staging
ADD COLUMN 
	amount_clean VARCHAR(255);
    
UPDATE data_staging
SET amount_clean = amount
; 

ALTER TABLE 
	data_staging
DROP COLUMN
	Timestamp;
	
ALTER TABLE 
	data_staging
DROP COLUMN
	Amount; 

SELECT
	CASE 
        WHEN Amount = '' THEN NULL
        ELSE CONCAT( '$', ROUND(amount, 2))
    END 
    FROM
		data_staging
    ;

UPDATE data_staging 
SET amount_clean = CASE 
        WHEN Amount = '' THEN NULL
        ELSE CONCAT( '$', ROUND(amount, 2))
    END; 

ALTER TABLE 
	ecommerce_clicks.data_staging
ADD COLUMN 
	Time_clean VARCHAR(255);
    
UPDATE data_staging
SET Time_clean = Timestamp
; 

SELECT 
	DATE_FORMAT(Time_clean, '%Y-%m-%d %H:%i:%s') AS formatted_timestamp
FROM 
	data_staging
;

UPDATE data_staging
SET
	Time_clean = DATE_FORMAT(Time_clean,'%Y-%m-%d %H:%i:%s') 
;

-- Total Revenue Generated by each Product 
SELECT 
	ProductID,
    ROUND(SUM(amount_clean), 4) AS product_revenue
FROM 
	data_staging
WHERE 
	Outcome= 'purchase'
GROUP BY 
	ProductID
;
-- Analyzing User Behavior: Duration of each user session$$
SELECT 
  UserID,
  SessionID,
  MIN(Time_clean) AS session_start,
  MAX(Time_clean) AS session_end,
  TIMESTAMPDIFF(DAY, MIN(Time_clean), MAX(Time_clean)) AS session_duration_day
FROM 
  data_staging
GROUP BY 
  UserID, SessionID
;
-- Analyze the frequency of different event types (e.g., page views, clicks) per user or session.
SELECT
	UserID,
	EventType,
    COUNT(*) AS Event_freq
FROM data_staging
GROUP BY 
	UserID, EventType
;
-- Path Analysis: Determine the common paths users take through the site by analyzing the sequence of event types
SELECT 
  UserID,
  SessionID,
  GROUP_CONCAT(EventType ORDER BY time_clean SEPARATOR ' -> ') AS event_path
FROM 
  data_staging
GROUP BY 
  UserID, SessionID
;
-- Total Revenue per Product: Calculate the total revenue generated by each product.
SELECT 
	ProductID,
    SUM(amount_clean) AS product_revenue
FROM 
	data_staging
WHERE 
	Outcome= 'purchase'
GROUP BY 
	ProductID
;
-- Conversion Rate Analysis: product view into purchase (no of sales/no of visitors) x 100
SELECT 
	EventType,
    COUNT(EventType) AS Total_Transaction
FROM 
	data_staging
WHERE 
	EventType = 'purchase'
GROUP BY 
	EventType 
; 

SELECT 
	EventType,
    COUNT(EventType) AS Total_Visits
FROM 
	data_staging
WHERE 
	EventType = 'login'
GROUP BY EventType
;

WITH Number_of_Sales AS 
(
SELECT 
	Outcome,
    COUNT(Outcome) AS Total_Transaction
FROM 
	data_staging
WHERE 
	Outcome != ''
GROUP BY 
	Outcome 
),
Number_of_Visitors AS
(
SELECT 
	EventType,
    COUNT(EventType) AS Total_Visits
FROM 
	data_staging
WHERE 
	EventType = 'login'
GROUP BY EventType
)
SELECT
	(Number_of_Sales.Total_Transaction/Number_of_Visitors.Total_Visits) * 100 AS conversion_rate
FROM 
	Number_of_Sales,
    Number_of_Visitors
;
-- Frequent Buyers: Identify users who make frequent purchases
WITH customer_purchase_quantity AS
(
SELECT
	UserID,
    COUNT(EventType) AS Total_Purchase
FROM
	data_staging
WHERE 
	EventType = 'purchase'
GROUP BY 
	UserID
ORDER BY
	Total_Purchase DESC
)
SELECT * 
FROM customer_purchase_quantity
;
-- High-Value Customers: Identify users with high total spending.
SELECT
	UserID,
    ROUND(SUM(amount_clean), 2) AS total_spending
FROM 
	data_staging
WHERE 
	amount_clean IS NOT NULL 
GROUP BY 
	UserID
ORDER BY 
	total_spending DESC
;
-- Impact of Add to Cart on Purchases: Analyze how adding items to the cart affects the likelihood of making a purchase (ADD TO CART RATE) 
-- Add to Cart Rate: Total Number of Add-To-Cart Actions/Total Number of Site Visitors x 100
SELECT 
    COUNT(EventType) AS Total_Visits
FROM 
	data_staging
WHERE 
	EventType = 'login'
;

SELECT 
	COUNT(EventType) AS Total_Atc
FROM 
	data_staging
WHERE
	EventType = 'add_to_cart'
;

WITH Visitor_number AS
(
	SELECT 
    COUNT(EventType) AS Total_Visits
FROM 
	data_staging
WHERE 
	EventType = 'login'
), 
Atc_number AS 
(
	SELECT 
	COUNT(EventType) AS Total_Atc
FROM 
	data_staging
WHERE
	EventType = 'add_to_cart'
)
SELECT 
	(Total_Visits/Total_Atc)*100 AS ATC_rate
FROM 
	Visitor_number,
    Atc_number
;
-- Time of Day Analysis: Analyze the distribution of events or purchases throughout the day
SELECT
	HOUR(Time_clean) AS hour_of_day,
	COUNT(EventType) AS event_count 
FROM 
	data_staging 
GROUP BY hour_of_day 
ORDER BY hour_of_day
;

WITH Traffic_perhour AS 
(
SELECT
	HOUR(Time_clean) AS hour_of_day,
	COUNT(EventType) AS event_count 
FROM 
	data_staging 
GROUP BY hour_of_day 
ORDER BY event_count DESC 
)
SELECT*
FROM 
	Traffic_perhour
LIMIT 20
;
-- Event Counts per Session: Analyze the number of events per session to identify sessions with high activity.
SELECT 
	UserID,
    SessionID,
    COUNT(SessionID) AS number_of_actions
FROM 
	data_staging
GROUP BY 
	UserID,
	SessionID
;

WITH Event_perSession AS
(
SELECT 
	UserID,
    SessionID,
    COUNT(SessionID) AS number_of_actions
FROM 
	data_staging
GROUP BY 
	UserID,
	SessionID
)
SELECT* 
FROM
	Event_perSession
ORDER BY 
	number_of_actions DESC
;
-- Daily/Weekly Sales Trends: Analyze sales trends over time to identify patterns or trends.
SELECT 
  DATE(time_clean) AS date,
  ROUND(SUM(amount_clean), 2) AS daily_sales
FROM 
  data_staging
WHERE 
  EventType = 'purchase'
GROUP BY 
  date
ORDER BY 
  date
;